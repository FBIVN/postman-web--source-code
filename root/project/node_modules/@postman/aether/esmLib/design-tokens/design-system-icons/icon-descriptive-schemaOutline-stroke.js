function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import IconWrapper from '../../components/Icon/IconWrapper';
var iconSVG = /*#__PURE__*/React.createElement("svg", {
  width: "16",
  height: "16",
  viewBox: "0 0 16 16",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, /*#__PURE__*/React.createElement("path", {
  fillRule: "evenodd",
  clipRule: "evenodd",
  d: "M14 2H1V1H14V2Z",
  fill: "#6B6B6B"
}), /*#__PURE__*/React.createElement("path", {
  fillRule: "evenodd",
  clipRule: "evenodd",
  d: "M6 8.5H1V7.5H6V8.5Z",
  fill: "#6B6B6B"
}), /*#__PURE__*/React.createElement("path", {
  fillRule: "evenodd",
  clipRule: "evenodd",
  d: "M7 12H1V11H7V12Z",
  fill: "#6B6B6B"
}), /*#__PURE__*/React.createElement("path", {
  fillRule: "evenodd",
  clipRule: "evenodd",
  d: "M15 5H1V4H15V5Z",
  fill: "#6B6B6B"
}), /*#__PURE__*/React.createElement("path", {
  fillRule: "evenodd",
  clipRule: "evenodd",
  d: "M8 15H1V14H8V15Z",
  fill: "#6B6B6B"
}), /*#__PURE__*/React.createElement("path", {
  fillRule: "evenodd",
  clipRule: "evenodd",
  d: "M8.41892 6.6355C7.9276 6.42492 7.42694 6.91349 7.62547 7.40981L10.4271 14.414C10.6396 14.9451 11.404 14.906 11.5611 14.356L12.4083 11.3911L14.9085 10.5576C15.4319 10.3832 15.4623 9.65428 14.9552 9.43694L8.41892 6.6355ZM8.9126 7.93507L13.5943 9.94163L11.8919 10.5091C11.704 10.5717 11.5591 10.723 11.5047 10.9135L10.921 12.9562L8.9126 7.93507Z",
  fill: "#6B6B6B"
}));
var IconDescriptiveSchemaOutlineStroke = /*#__PURE__*/React.forwardRef(function IconDescriptiveSchemaOutlineStroke(props, ref) {
  // eslint-disable-next-line react/jsx-props-no-spreading
  return /*#__PURE__*/React.createElement(IconWrapper, _extends({}, props, {
    svg: iconSVG,
    ref: ref
  }));
});
export default IconDescriptiveSchemaOutlineStroke;