function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import buttonTokens from '../../components/Button/ButtonTokens';
import { globals, aliases } from '../tokens';
import ResponsiveContainerTokens from '../../components/ResponsiveContainer/ResponsiveContainerToken';
import CheckBoxComponentTokens from '../../components/CheckBox/CheckBoxTokens';
import SwitchComponentTokens from '../../components/ToggleSwitch/ToggleSwitchTokens';
import InputTokens from '../InputTokens';
import RadioComponentTokens from '../../components/Radio/RadioTokens';
import StepperComponentTokens from '../../components/Stepper/StepperTokens';
import AvatarComponentTokens from '../../components/Avatar/AvatarTokens';
import BadgeComponentTokens from '../../components/Badge/BadgeTokens';
import BannerComponentTokens from '../../components/Banner/BannerTokens';
import ModalComponentTokens from '../../components/Modal/ModalTokens';
import ToastComponentTokens from '../../components/Toast/ToastTokens';
import TabComponentTokens from '../../components/Tab/TabTokens';
import SelectComponentTokens from '../../components/Select/SelectTokens';
import TooltipTokens from '../../components/Tooltip/TooltipTokens';
import BreadcrumbComponentTokens from '../../components/Breadcrumb/BreadcrumbTokens';
import PopoverTokens from '../../components/Popover/PopoverTokens';

var dark = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, globals.colors), globals.border), globals.shadow), globals.sizing), globals.spacing), globals.typography), aliases.dark.background), aliases.dark.border), aliases.dark.colors), aliases.dark.content), aliases.dark.controls), aliases.dark.header), aliases.dark.highlight), aliases.dark.shadow), buttonTokens.dark), ResponsiveContainerTokens), CheckBoxComponentTokens.dark), SwitchComponentTokens.dark), RadioComponentTokens.dark), StepperComponentTokens.dark), AvatarComponentTokens.dark), BadgeComponentTokens.dark), BannerComponentTokens.dark), InputTokens.dark), ToastComponentTokens.dark), TabComponentTokens.dark), ModalComponentTokens.dark), SelectComponentTokens.dark), TooltipTokens.dark), BreadcrumbComponentTokens.dark), PopoverTokens.dark);

export default dark;