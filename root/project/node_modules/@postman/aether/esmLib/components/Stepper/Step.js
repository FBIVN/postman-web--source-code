import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import Flex from '../Flex/Flex';
import Button from '../Button/Button';
import Icon from '../Icon/Icon';
var StyledStatusIndicator = styled.span.withConfig({
  displayName: "Step__StyledStatusIndicator",
  componentId: "sc-y17q4p-0"
})(["width:12px;height:12px;box-sizing:border-box;border-radius:", ";border:", ";background-color:", ";"], function (props) {
  return props.theme['border-radius-max'];
}, function (props) {
  return props.status !== 'progress' ? "".concat(props.theme['border-width-default'], " ").concat(props.theme['border-style-solid'], " ").concat(props.theme['grey-40']) : "";
}, function (props) {
  return props.status === 'progress' ? props.theme['base-color-brand'] : props.theme['background-color-primary'];
});
var StyledStepWrapper = styled.div.withConfig({
  displayName: "Step__StyledStepWrapper",
  componentId: "sc-y17q4p-1"
})(["display:flex;padding-left:", ";& > .aether-step__label{& > .aether-button__text{color:", ";&:hover{color:", ";}}}"], function (props) {
  return props.theme['spacing-xs'];
}, function (props) {
  return props.isDisabled ? props.theme['content-color-secondary'] : props.theme['content-color-primary'];
}, function (props) {
  return props.isDisabled ? props.theme['content-color-secondary'] : props.theme['content-color-link'];
});
export default function Step(props) {
  var label = props.label,
      status = props.status,
      isDisabled = props.isDisabled,
      _stepIndex = props._stepIndex,
      _onChange = props._onChange,
      className = props.className;
  return /*#__PURE__*/React.createElement(Flex, {
    basis: "0px",
    grow: 1,
    shrink: 1,
    alignItems: "center",
    className: className,
    padding: {
      paddingRight: 'spacing-l'
    }
  }, status === 'completed' ? /*#__PURE__*/React.createElement(Icon, {
    name: "icon-state-success-stroke-small",
    color: "content-color-primary",
    size: "small"
  }) : /*#__PURE__*/React.createElement(StyledStatusIndicator, {
    status: status
  }), /*#__PURE__*/React.createElement(StyledStepWrapper, {
    isDisabled: isDisabled
  }, /*#__PURE__*/React.createElement(Button, {
    className: "aether-step__label",
    isDisabled: isDisabled,
    text: label,
    type: "plain",
    onClick: function onClick() {
      if (!isDisabled && _onChange) _onChange(_stepIndex);
    }
  })));
}
Step.defaultProps = {
  className: '',
  status: 'pending',
  isDisabled: false,
  _stepIndex: 0,
  _onChange: null
};
Step.propTypes = {
  label: PropTypes.string.isRequired,
  isDisabled: PropTypes.bool,
  status: PropTypes.oneOf(['pending', 'progress', 'completed']),
  _stepIndex: PropTypes.number,
  _onChange: PropTypes.func,
  className: PropTypes.string
};