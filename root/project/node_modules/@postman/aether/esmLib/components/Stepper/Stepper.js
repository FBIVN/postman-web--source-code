import React, { Children, cloneElement, isValidElement } from 'react';
import PropTypes from 'prop-types';
import StepHeader from './StepHeader';
import StepPanels from './StepPanels';
import Flex from '../Flex/Flex';
export default function Stepper(props) {
  var activeStepIndex = props.activeStepIndex,
      onChange = props.onChange,
      className = props.className,
      children = props.children; // children must be Step component

  var validChildren = Children.map(children, function (child) {
    // Checking isValidElement or not
    if ( /*#__PURE__*/isValidElement(child)) {
      if ([StepHeader].includes(child.type)) {
        return /*#__PURE__*/cloneElement(child, {
          _activeStepIndex: activeStepIndex,
          _onChange: onChange
        });
      }

      if ([StepPanels].includes(child.type)) {
        return /*#__PURE__*/cloneElement(child, {
          _activeStepIndex: activeStepIndex
        });
      }
    }

    return null;
  });
  return /*#__PURE__*/React.createElement(Flex, {
    className: className,
    direction: "column"
  }, validChildren);
}
Stepper.defaultProps = {
  className: '',
  onChange: null
};
Stepper.propTypes = {
  activeStepIndex: PropTypes.number.isRequired,
  onChange: PropTypes.func,
  className: PropTypes.string,
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired
};