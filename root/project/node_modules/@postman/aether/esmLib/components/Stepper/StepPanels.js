import React, { Children, isValidElement, cloneElement } from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import StepPanel from './StepPanel';
var StyledStepPanelContainer = styled.div.withConfig({
  displayName: "StepPanels__StyledStepPanelContainer",
  componentId: "sc-22889a-0"
})(["padding-top:", ";padding-bottom:", ";"], function (props) {
  return props.theme['spacing-xl'];
}, function (props) {
  return props.theme['spacing-xl'];
});
export default function StepPanels(props) {
  var counter = 0;
  var _activeStepIndex = props._activeStepIndex,
      className = props.className,
      children = props.children; // children are only StepPanel type

  var childrenWithProps = Children.map(children, function (child) {
    var stepPanelElement = child; // Checking isValidElement or not

    if ( /*#__PURE__*/isValidElement(child) && [StepPanel].includes(child.type)) {
      stepPanelElement = /*#__PURE__*/cloneElement(child, {
        _isActive: counter === _activeStepIndex,
        _index: counter
      });
      counter += 1;
      return stepPanelElement;
    }

    return null;
  });
  return /*#__PURE__*/React.createElement(StyledStepPanelContainer, {
    className: className
  }, childrenWithProps);
}
StepPanels.defaultProps = {
  _activeStepIndex: 0,
  className: ''
};
StepPanels.propTypes = {
  _activeStepIndex: PropTypes.number,
  className: PropTypes.string,
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired
};