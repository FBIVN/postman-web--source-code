import React, { Children, isValidElement, cloneElement } from 'react';
import PropTypes from 'prop-types';
import TabPanel from './TabPanel';
var TabPanels = /*#__PURE__*/React.forwardRef(function TabPanels(props, ref) {
  var counter = 0;
  var _activeTabIndex = props._activeTabIndex,
      className = props.className,
      children = props.children; // children are only TabPanel type

  var childrenWithProps = Children.map(children, function (child) {
    var tabPanelElement = child; // Checking isValidElement or not

    if ( /*#__PURE__*/isValidElement(child) && [TabPanel].includes(child.type)) {
      tabPanelElement = /*#__PURE__*/cloneElement(child, {
        _isActive: counter === _activeTabIndex,
        _index: counter
      });
      counter += 1;
      return tabPanelElement;
    }

    return null;
  });
  return /*#__PURE__*/React.createElement("div", {
    ref: ref,
    className: className
  }, childrenWithProps);
});
TabPanels.defaultProps = {
  _activeTabIndex: 0,
  className: '',
  children: null
};
TabPanels.propTypes = {
  _activeTabIndex: PropTypes.number,
  className: PropTypes.string,
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])
};
TabPanels.displayName = 'TabPanels';
export default TabPanels;