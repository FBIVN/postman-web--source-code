import React from 'react';
import styled from 'styled-components';
import PropTypes from 'prop-types';
import Text from '../Text/Text'; // defines the tab styles

function getTabStyles(type, isActive, isDisabled, theme) {
  if (type === 'secondary') {
    if (isActive) {
      return "\n        padding: ".concat(theme['spacing-zero'], " ").concat(theme['spacing-m'], ";\n        background-color: ").concat(theme['background-color-primary'], ";\n        border-radius: ").concat(theme['border-radius-default'], ";\n        box-shadow: inset 0 0 0 1px ").concat(theme['border-color-strong'], ";\n        border:none;\n        box-sizing: border-box;\n        color: ").concat(isDisabled ? theme['content-color-tertiary'] : theme['content-color-primary'], "\n      ");
    }

    return "\n      padding: ".concat(theme['spacing-zero'], " ").concat(theme['spacing-m'], ";\n      background-color: transparent;\n      border-radius: ").concat(theme['border-radius-default'], ";\n      box-sizing: border-box;\n      border:none;\n      box-sizing: border-box;\n      color: ").concat(isDisabled ? theme['content-color-tertiary'] : theme['content-color-secondary'], "\n    ");
  }

  if (isActive) {
    return "\n      padding: ".concat(theme['spacing-s'], " ").concat(theme['spacing-zero'], ";\n      box-shadow: ").concat(theme['tab-selected-border'], ";\n      background-color: ").concat(theme['background-color-primary'], ";\n      border: none;\n      color: ").concat(isDisabled ? theme['content-color-tertiary'] : theme['content-color-primary'], "\n    ");
  }

  return "\n    padding: ".concat(theme['spacing-s'], " ").concat(theme['spacing-zero'], ";\n    background-color: ").concat(theme['background-color-primary'], ";\n    border: none;\n    color: ").concat(isDisabled ? theme['content-color-tertiary'] : theme['content-color-secondary'], "\n  ");
}

var StyledTab = styled.button.withConfig({
  displayName: "Tab__StyledTab",
  componentId: "sc-1mk7q27-0"
})(["position:relative;outline-color:", ";outline-offset:2px;z-index:1;height:", ";cursor:", ";&:hover{color:", ";}", ""], function (props) {
  return props.theme['blue-30'];
}, function (props) {
  return props.theme['size-m'];
}, function (props) {
  return props.isDisabled ? 'not-allowed' : 'pointer';
}, function (props) {
  return !props.isDisabled && props.theme['content-color-primary'];
}, function (props) {
  var _isActive = props._isActive,
      _type = props._type,
      isDisabled = props.isDisabled,
      theme = props.theme;
  return getTabStyles(_type, _isActive, isDisabled, theme);
});
var StyledMetadata = styled.span.withConfig({
  displayName: "Tab__StyledMetadata",
  componentId: "sc-1mk7q27-1"
})(["padding:", ";margin-left:", ";background-color:", ";border-radius:", ";color:", ";font-weight:", ";font-size:", ";line-height:", ";text-align:center;"], function (props) {
  return "".concat(props.theme['spacing-zero'], " ").concat(props.theme['spacing-xs']);
}, function (props) {
  return props.theme['spacing-xs'];
}, function (props) {
  return props.theme['base-color-brand'];
}, function (props) {
  return props.theme['border-radius-default'];
}, function (props) {
  return props.theme['content-color-constant'];
}, function (props) {
  return props.theme['text-weight-medium'];
}, function (props) {
  return props.theme['text-size-s'];
}, function (props) {
  return props.theme['line-height-s'];
});
var StyledStatusIndicator = styled.span.withConfig({
  displayName: "Tab__StyledStatusIndicator",
  componentId: "sc-1mk7q27-2"
})(["width:", ";height:", ";border-radius:", ";background-color:", ";position:absolute;top:4px;right:", ";"], function (props) {
  return props.theme['tab-content-indicator-width'];
}, function (props) {
  return props.theme['tab-content-indicator-height'];
}, function (props) {
  return props.theme['border-radius-max'];
}, function (props) {
  return props.statusIndicator === 'success' ? props.theme['base-color-success'] : props.theme['base-color-error'];
}, function (props) {
  return props.type === 'primary' ? '-8px' : '4px';
});
var StyledPrimaryTabWrapper = styled.li.withConfig({
  displayName: "Tab__StyledPrimaryTabWrapper",
  componentId: "sc-1mk7q27-3"
})(["list-style-type:none;padding-left:", ";padding-right:", ";cursor:", ";", ""], function (props) {
  return props.type === 'primary' ? props.theme['spacing-s'] : props.theme['spacing-zero'];
}, function (props) {
  return props.type === 'primary' ? props.theme['spacing-l'] : props.theme['spacing-zero'];
}, function (props) {
  return props.isDisabled ? 'not-allowed' : 'pointer';
}, function (props) {
  var _isActive = props._isActive;

  if (_isActive) {
    return "\n        &:after {\n          z-index: -1;\n        }\n      ";
  }

  return '';
});
var Tab = /*#__PURE__*/React.forwardRef(function Tab(props, ref) {
  var label = props.label,
      counter = props.counter,
      statusIndicator = props.statusIndicator,
      _type = props._type,
      _isActive = props._isActive,
      _onChange = props._onChange,
      isDisabled = props.isDisabled,
      className = props.className,
      _index = props._index;
  var finalLabel = label;
  var isMetadataSpecified = counter.type === 'metadata';
  var contentCount = counter.value || '';

  var handleOnClick = function handleOnClick() {
    if (!isDisabled) {
      _onChange(_index);
    }
  };

  if (!isMetadataSpecified) {
    if (counter.type === 'content' && typeof contentCount === 'number') {
      finalLabel = "".concat(label, " (").concat(contentCount, ")");
    }
  }

  return /*#__PURE__*/React.createElement(StyledPrimaryTabWrapper, {
    _isActive: _isActive,
    type: _type,
    isDisabled: isDisabled,
    onClick: handleOnClick
  }, /*#__PURE__*/React.createElement(StyledTab, {
    _isActive: _isActive,
    _type: _type,
    className: className,
    key: "TAB_HEADER ".concat(_index),
    ref: ref,
    isDisabled: isDisabled
  }, /*#__PURE__*/React.createElement(Text, null, finalLabel), isMetadataSpecified && typeof contentCount === 'number' ? /*#__PURE__*/React.createElement(StyledMetadata, null, contentCount) : '', !isMetadataSpecified && ['success', 'error'].indexOf(statusIndicator) > -1 ? /*#__PURE__*/React.createElement(StyledStatusIndicator, {
    type: _type,
    statusIndicator: statusIndicator
  }) : ''));
});
Tab.defaultProps = {
  counter: {},
  statusIndicator: null,
  _type: 'primary',
  _onChange: function _onChange() {},
  isDisabled: false,
  _isActive: false,
  _index: null,
  className: ''
};
Tab.propTypes = {
  label: PropTypes.string.isRequired,
  counter: PropTypes.shape({
    type: PropTypes.oneOf(['metadata', 'content']),
    value: PropTypes.number
  }),
  statusIndicator: PropTypes.oneOf(['success', 'error']),
  isDisabled: PropTypes.bool,
  _type: PropTypes.oneOf(['primary', 'secondary']),
  _isActive: PropTypes.bool,
  _index: PropTypes.number,
  _onChange: PropTypes.func,
  className: PropTypes.string
};
Tab.displayName = 'Tab';
export default Tab;