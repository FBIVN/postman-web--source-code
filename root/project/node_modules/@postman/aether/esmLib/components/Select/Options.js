import React from 'react';
import PropTypes from 'prop-types';
import Option from './Option';
import OptionGroup from './OptionGroup';
export default function Options(props) {
  var children = props.children,
      placeholder = props.placeholder;
  var clonedChildren = React.Children.map(children, function (child) {
    if ( /*#__PURE__*/React.isValidElement(child) && (child.type === Option || child.type === OptionGroup)) {
      return child;
    }

    return null;
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, placeholder && /*#__PURE__*/React.createElement("option", {
    value: ""
  }, placeholder), clonedChildren);
}
Options.propTypes = {
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,
  placeholder: PropTypes.string.isRequired
};