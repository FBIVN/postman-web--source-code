import React from 'react';
import propTypes from 'prop-types';
import Option from './Option';
export default function OptionGroup(props) {
  var label = props.label,
      isDisabled = props.isDisabled,
      children = props.children;
  var clonedChildren = React.Children.map(children, function (child) {
    if ( /*#__PURE__*/React.isValidElement(child) && child.type === Option) {
      return child;
    }

    return null;
  });
  return /*#__PURE__*/React.createElement("optgroup", {
    disabled: isDisabled,
    label: label
  }, clonedChildren);
}
OptionGroup.defaultProps = {
  isDisabled: false
};
OptionGroup.propTypes = {
  label: propTypes.string.isRequired,
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]).isRequired,
  isDisabled: propTypes.bool
};