import React from 'react';
import styled from 'styled-components';
import PropTypes from 'prop-types';

function getSwitchBackgroundColor(isChecked, isDisabled, theme) {
  if (isChecked) {
    return isDisabled ? theme['switch-track-checked-disabled-background-color'] : theme['switch-track-checked-background-color'];
  }

  return isDisabled ? theme['switch-track-unchecked-disabled-background-color'] : theme['switch-track-unchecked-background-color'];
}

var StyledSwitchContainer = styled.div.withConfig({
  displayName: "ToggleSwitch__StyledSwitchContainer",
  componentId: "sc-kl8v61-0"
})(["display:inline-block;position:relative;height:16px;width:28px;"]);
var StyledInputSwitch = styled.input.attrs(function () {
  return {
    type: 'checkbox'
  };
}).withConfig({
  displayName: "ToggleSwitch__StyledInputSwitch",
  componentId: "sc-kl8v61-1"
})(["cursor:", ";position:absolute;top:0;left:0;height:0.1px;opacity:0;width:0.1px;&:focus + .ds-switch-focus{box-shadow:", ";}"], function (props) {
  return props.isDisabled ? 'not-allowed' : 'pointer';
}, function (props) {
  return props.theme['shadow-focus'];
});
var StyledSwitchLabel = styled.label.attrs(function () {
  return {
    className: 'ds-switch-focus'
  };
}).withConfig({
  displayName: "ToggleSwitch__StyledSwitchLabel",
  componentId: "sc-kl8v61-2"
})(["border-radius:9999px;position:absolute;cursor:", ";top:0;left:0;right:0;bottom:0;background-color:", ";&:before{border-radius:9999px;position:absolute;content:'';height:12px;width:12px;left:2px;bottom:2px;background-color:", ";transition:0.2s;transform:", ";}"], function (props) {
  return props.isDisabled ? 'not-allowed' : 'pointer';
}, function (props) {
  return getSwitchBackgroundColor(props.isChecked, props.isDisabled, props.theme);
}, function (props) {
  return props.isDisabled ? props.theme['switch-thumb-disabled-background-color'] : props.theme['switch-thumb-background-color'];
}, function (props) {
  return props.isChecked ? 'translateX(12px)' : '';
});
var ToggleSwitch = /*#__PURE__*/React.forwardRef(function ToggleSwitch(props, ref) {
  var ariaLabel = props['aria-label'],
      isChecked = props.isChecked,
      isDisabled = props.isDisabled,
      onChange = props.onChange,
      name = props.name,
      id = props.id,
      className = props.className;

  var handleChange = function handleChange(e) {
    if (!isDisabled) {
      onChange(!isChecked, e);
    }
  };

  return /*#__PURE__*/React.createElement(StyledSwitchContainer, {
    ref: ref,
    onClick: handleChange,
    checked: isChecked,
    "aria-checked": isChecked
  }, /*#__PURE__*/React.createElement(StyledInputSwitch, {
    "aria-label": ariaLabel,
    isDisabled: isDisabled,
    name: name,
    id: id,
    className: className
  }), /*#__PURE__*/React.createElement(StyledSwitchLabel, {
    htmlFor: id,
    isChecked: isChecked,
    isDisabled: isDisabled
  }));
});
ToggleSwitch.displayName = 'ToggleSwitch';
export default ToggleSwitch;
ToggleSwitch.defaultProps = {
  'aria-label': 'Switch',
  isDisabled: false,
  name: '',
  id: '',
  className: ''
};
ToggleSwitch.propTypes = {
  'aria-label': PropTypes.string,
  isChecked: PropTypes.bool.isRequired,
  isDisabled: PropTypes.bool,
  onChange: PropTypes.func.isRequired,
  name: PropTypes.string,
  id: PropTypes.string,
  className: PropTypes.string
};