function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import useToasts from './ToastManager'; // referred solution from here
// https://stackoverflow.com/questions/53371356/how-can-i-use-react-hooks-in-react-classic-class-component
// This is a HOC for toast

export default function withToast(Component) {
  return function ToastWrapperComponent(props) {
    var _useToasts = useToasts(),
        addToast = _useToasts.addToast; // eslint-disable-next-line react/jsx-props-no-spreading


    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {
      addToast: addToast
    }));
  };
}