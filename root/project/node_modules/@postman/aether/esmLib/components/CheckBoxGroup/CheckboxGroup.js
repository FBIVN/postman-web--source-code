import React, { Children, isValidElement } from 'react';
import PropTypes from 'prop-types';
import Flex from '../Flex/Flex';
import Heading from '../Heading/Heading';
import Text from '../Text/Text';
import Checkbox from '../CheckBox/Checkbox';
import { globals } from '../../design-tokens/tokens';

function CheckboxGroup(props) {
  var isHidden = props.isHidden,
      direction = props.direction,
      children = props.children,
      padding = props.padding,
      label = props.label,
      helperText = props.helperText;
  var ChildrenWithProps = Children.map(children, function (child) {
    if ( /*#__PURE__*/isValidElement(child) && child.type === Checkbox) {
      return child;
    }

    return null;
  });
  return /*#__PURE__*/React.createElement("div", null, label ? /*#__PURE__*/React.createElement(Heading, {
    type: "h6",
    text: label
  }) : '', helperText ? /*#__PURE__*/React.createElement(Text, {
    type: "para"
  }, helperText) : '', /*#__PURE__*/React.createElement(Flex, {
    hiddenFor: isHidden ? ['mobile', 'tablet', 'computer'] : [],
    direction: direction,
    padding: padding,
    gap: direction === 'column' ? 'spacing-s' : 'spacing-l'
  }, ChildrenWithProps));
}

export default CheckboxGroup;
CheckboxGroup.defaultProps = {
  label: '',
  isHidden: false,
  direction: 'column',
  padding: 'spacing-s',
  helperText: ''
};
CheckboxGroup.propTypes = {
  isHidden: PropTypes.bool,
  direction: PropTypes.oneOf(['row', 'column']),
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,
  padding: PropTypes.oneOfType([PropTypes.oneOf(Object.keys(globals.spacing)), PropTypes.shape({
    paddingTop: PropTypes.string,
    paddingBottom: PropTypes.string,
    paddingLeft: PropTypes.string,
    paddingRight: PropTypes.string
  }), PropTypes.string]),
  label: PropTypes.string,
  helperText: PropTypes.string
};