import React, { cloneElement, Children, isValidElement } from 'react';
import PropTypes from 'prop-types';
import Radio from '../Radio/Radio';
import Heading from '../Heading/Heading';
import Text from '../Text/Text';
import Flex from '../Flex/Flex';
export default function RadioGroup(props) {
  var direction = props.direction,
      value = props.value,
      children = props.children,
      onChange = props.onChange,
      name = props.name,
      label = props.label,
      helperText = props.helperText;

  var handleOnChange = function handleOnChange(val) {
    onChange(val);
  };

  var childrenWithProps = Children.map(children, function (child) {
    var RadioElement = child;

    if ( /*#__PURE__*/isValidElement(child) && child.type === Radio) {
      RadioElement = /*#__PURE__*/cloneElement(child, {
        _isChecked: child.props.value === value,
        onChange: handleOnChange,
        name: name
      });
      return RadioElement;
    }

    return null;
  });
  return /*#__PURE__*/React.createElement(Flex, {
    gap: "spacing-s",
    direction: "column"
  }, /*#__PURE__*/React.createElement(Flex, {
    direction: "column"
  }, label ? /*#__PURE__*/React.createElement(Heading, {
    type: "h6",
    text: label
  }) : '', helperText ? /*#__PURE__*/React.createElement(Text, {
    type: "para"
  }, helperText) : ''), /*#__PURE__*/React.createElement(Flex, {
    direction: direction,
    gap: direction === 'row' ? 'spacing-l' : 'spacing-s'
  }, childrenWithProps));
}
RadioGroup.defaultProps = {
  direction: 'row',
  value: '',
  name: '',
  helperText: ''
};
RadioGroup.propTypes = {
  direction: PropTypes.string,
  value: PropTypes.string,
  name: PropTypes.string,
  onChange: PropTypes.func.isRequired,
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,
  label: PropTypes.string.isRequired,
  helperText: PropTypes.string
};