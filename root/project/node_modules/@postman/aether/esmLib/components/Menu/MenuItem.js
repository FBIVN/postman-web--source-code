function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import propTypes from 'prop-types';
import Tooltip from '../Tooltip/Tooltip';
var StyledMenuItemWrapper = styled.div.withConfig({
  displayName: "MenuItem__StyledMenuItemWrapper",
  componentId: "sc-ndd31y-0"
})(["border-radius:", ";&:focus{outline:none;}"], function (props) {
  return props.theme['border-radius-default'];
});
var StyledMenuItem = styled.button.withConfig({
  displayName: "MenuItem__StyledMenuItem",
  componentId: "sc-ndd31y-1"
})(["box-sizing:border-box;width:100%;display:flex;align-items:center;justify-content:space-between;padding:", ";border:none;border-radius:", ";outline:none;font-size:", ";line-height:", ";text-decoration:none;background-color:", ";", " &:hover{cursor:pointer;background-color:", ";}&:disabled{cursor:not-allowed;background-color:", ";", " svg path{fill:", ";}}"], function (props) {
  return "".concat(props.theme['spacing-xs'], " ").concat(props.theme['spacing-m'], ";");
}, function (props) {
  return props.theme['border-radius-default'];
}, function (props) {
  return props.theme['text-size-m'];
}, function (props) {
  return props.theme['line-height-m'];
}, function (props) {
  return props.theme['button-tertiary-background-color'];
}, function (props) {
  if (props.type === 'destructive') {
    return "color: ".concat(props.theme['content-color-error'], ";");
  }

  return "color: ".concat(props.theme['content-color-primary'], ";");
}, function (props) {
  return props.theme['button-tertiary-hover-background-color'];
}, function (props) {
  return props.theme['button-tertiary-disabled-background-color'];
}, function (props) {
  if (props.type === 'destructive') {
    return "opacity: 0.4;";
  }

  return "color: ".concat(props.theme['button-tertiary-disabled-content-color'], ";");
}, function (props) {
  return props.theme['button-tertiary-disabled-content-color'];
});
var StyledMenuItemShortcut = styled.span.withConfig({
  displayName: "MenuItem__StyledMenuItemShortcut",
  componentId: "sc-ndd31y-2"
})(["color:", ";"], function (props) {
  return props.theme['content-color-tertiary'];
});

function MenuItem(props) {
  var type = props.type,
      shortcutLabel = props.shortcutLabel,
      tooltip = props.tooltip,
      children = props.children,
      closeOnSelect = props.closeOnSelect,
      closeMenu = props.closeMenu,
      isDisabled = props.isDisabled,
      onClick = props.onClick,
      href = props.href,
      isLink = props.isLink;
  var ref = React.useRef();

  var handleOnClick = function handleOnClick(event) {
    if (closeOnSelect) {
      closeMenu();
    }

    if (onClick) {
      onClick(event);
    }
  };

  if (tooltip) {
    return /*#__PURE__*/React.createElement(Tooltip, {
      content: tooltip,
      placement: "right"
    }, isDisabled ? /*#__PURE__*/React.createElement(StyledMenuItemWrapper, {
      tabIndex: "0"
    }, /*#__PURE__*/React.createElement(StyledMenuItem, _extends({
      as: isLink ? 'a' : 'button',
      type: type,
      onClick: handleOnClick,
      disabled: isDisabled,
      ref: ref // eslint-disable-next-line react/jsx-props-no-spreading

    }, isLink && {
      href: href
    }, {
      className: "aether-menu__item"
    }), children, shortcutLabel && /*#__PURE__*/React.createElement(StyledMenuItemShortcut, null, shortcutLabel))) : /*#__PURE__*/React.createElement(StyledMenuItem, _extends({
      as: isLink ? 'a' : 'button',
      type: type,
      onClick: handleOnClick,
      disabled: isDisabled,
      ref: ref // eslint-disable-next-line react/jsx-props-no-spreading

    }, isLink && {
      href: href
    }, {
      className: "aether-menu__item"
    }), children, shortcutLabel && /*#__PURE__*/React.createElement(StyledMenuItemShortcut, null, shortcutLabel)));
  }

  return /*#__PURE__*/React.createElement(StyledMenuItem, _extends({
    as: isLink ? 'a' : 'button',
    type: type,
    onClick: handleOnClick,
    disabled: isDisabled,
    ref: ref // eslint-disable-next-line react/jsx-props-no-spreading

  }, isLink && {
    href: href
  }, {
    className: "aether-menu__item"
  }), children, shortcutLabel && /*#__PURE__*/React.createElement(StyledMenuItemShortcut, null, shortcutLabel));
}

MenuItem.displayName = 'MenuItem';
export default MenuItem;
MenuItem.defaultProps = {
  type: 'default',
  closeOnSelect: true,
  closeMenu: function closeMenu() {},
  shortcutLabel: '',
  tooltip: '',
  isDisabled: false,
  isLink: false,
  href: '',
  onClick: null
};
MenuItem.propTypes = {
  children: propTypes.node.isRequired,
  type: propTypes.oneOf(['default', 'destructive']),
  closeOnSelect: propTypes.bool,
  closeMenu: propTypes.func,
  shortcutLabel: propTypes.string,
  tooltip: propTypes.string,
  isDisabled: propTypes.bool,
  isLink: propTypes.bool,
  href: propTypes.string,
  onClick: propTypes.func
};