'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reduce = require('lodash/reduce');

var _reduce2 = _interopRequireDefault(_reduce);

var _map = require('lodash/map');

var _map2 = _interopRequireDefault(_map);

var _clone = require('lodash/clone');

var _clone2 = _interopRequireDefault(_clone);

var _isEmpty = require('lodash/isEmpty');

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _get = require('lodash/get');

var _get2 = _interopRequireDefault(_get);

var _reactDraggable = require('@postman/react-draggable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_Component) {
  _inherits(Header, _Component);

  function Header(props) {
    _classCallCheck(this, Header);

    var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props));

    _this.state = {
      widths: (0, _map2.default)(props.columns, function (c) {
        return c.width;
      })
    };

    _this.widths = _this.state.widths;
    _this.handleResize = _this.handleResize.bind(_this);
    _this.handleResizeStart = _this.handleResizeStart.bind(_this);
    _this.handleResizeStop = _this.handleResizeStop.bind(_this);
    return _this;
  }

  _createClass(Header, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      this.setState({
        widths: nextProps.columnWidths
      }, function () {
        _this2.widths = nextProps.columnWidths;
      });
    }
  }, {
    key: 'handleResize',
    value: function handleResize(e) {
      var diff = this.initial.pageX - e.pageX,
          index = this.initial.index,
          currentWidth = (0, _clone2.default)(this.widths),
          percentage = diff / this.refs.DataEditorHeader.offsetWidth * 100,
          leftColumnWidth = currentWidth[index] - percentage,
          rightColumnWidth = currentWidth[index + 1] + percentage;

      if (leftColumnWidth > 5 && rightColumnWidth > 5) {
        currentWidth[index] = leftColumnWidth;
        currentWidth[index + 1] = rightColumnWidth;
        this.setState({ widths: currentWidth });
        this.widths = currentWidth;
        this.initial.pageX = e.pageX;
      }
    }
  }, {
    key: 'handleResizeStart',
    value: function handleResizeStart(e) {
      var resizeHandleIndex = Number(e.target.getAttribute('data-index'));
      var headerContents = this.refs.DataEditorHeader.querySelectorAll('.data-editor__header__cell');
      this.initial = {
        pageX: e.pageX,
        index: resizeHandleIndex,
        leftColumnContentWidth: headerContents[resizeHandleIndex].getBoundingClientRect().width,
        rightColumnContentWidth: headerContents[resizeHandleIndex + 1].getBoundingClientRect().width,
        headerActionsWidth: this.refs.editorToggleControls ? this.refs.editorToggleControls.getBoundingClientRect().width : 0
      };
    }
  }, {
    key: 'handleResizeStop',
    value: function handleResizeStop(e) {
      this.initial = {};
      this.props.onColumnResize && this.props.onColumnResize(this.widths);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var resizePreviewWidth = (0, _reduce2.default)(Array((0, _get2.default)(this.initial, 'index', 0) + 1), function (total, value, index) {
        return total + (0, _get2.default)(_this3, 'state.widths[' + index + ']', 0);
      }, 0);

      var children = (0, _map2.default)(this.props.columns, function (column, index) {
        return _react2.default.createElement(
          'div',
          { key: index, className: 'data-editor__header__cell', style: { width: _this3.props.columnWidths[index] + '%' } },
          _react2.default.createElement(
            'span',
            { className: 'data-editor__header__cell__title' },
            column.header
          ),
          index !== _this3.props.columns.length - 1 && column.resize && _react2.default.createElement(
            _reactDraggable.DraggableCore,
            {
              axis: 'x',
              onDrag: _this3.handleResize,
              onStart: _this3.handleResizeStart,
              onStop: _this3.handleResizeStop
            },
            _react2.default.createElement('div', {
              className: 'resize-handle',
              'data-index': index
            })
          )
        );
      });

      return _react2.default.createElement(
        'div',
        { className: 'data-editor__header', ref: 'DataEditorHeader' },
        !(0, _isEmpty2.default)(this.initial) && _react2.default.createElement('div', {
          className: 'resize-preview',
          style: {
            left: resizePreviewWidth + '%'
          }
        }),
        this.props.renderers.header(children)
      );
    }
  }]);

  return Header;
}(_react.Component);

exports.default = Header;